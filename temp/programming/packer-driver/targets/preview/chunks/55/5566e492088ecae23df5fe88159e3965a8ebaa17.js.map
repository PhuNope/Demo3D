{"version":3,"sources":["file:///F:/Lap%20Trinh%20Game/simple-games/assets/simple-run/scripts/PlayerController.ts"],"names":["_decorator","Component","SkeletalAnimationComponent","Vec3","CCFloat","systemEvent","SystemEvent","tween","AnimationComponent","AudioClip","AudioSourceComponent","GameDefines","GameState","ccclass","property","tempVec3_a","MoveAction","MoveState","cocosAnim","idle","run","jump","PlayerController","type","onTriggerCoin","onTriggerBlock","_pressedX","_pressedY","_moveState","RUNNING","_gameState","INIT","_audioSourceComp","start","getComponent","onGameStateChanged","state","onGameInit","PLAYING","onGamePlaying","END","onGameEnd","playerAnimComp","play","node","setPosition","set","jumpState","getState","on","EventType","FINISHED","onJumpEnd","TOUCH_START","onViewTouchStart","TOUCH_END","onViewTouchEnd","off","onTriggerEnter","event","triggerNode","otherCollider","name","playOneShot","coinAC","animComp","downName","isPlaying","location","getLocation","x","y","touchPoint","endX","endY","Math","abs","move","LEFT","RIGHT","UP","moveAction","by","position","leftLineX","onComplete","MOVING_LEFT","rightLineX","MOVING_RIGHT","jumpAC","crossFade","speed","JUMPING","update","deltaTime","translate","onDestroy"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, SkeletalAnimationComponent, Vec3, CCFloat, systemEvent, SystemEvent, tween, AnimationComponent, Touch, ColliderComponent, ITriggerEvent, AudioClip, AudioSourceComponent } from 'cc';\r\nimport {GameDefines, GameState} from './GameDefines';\r\nconst { ccclass, property } = _decorator;\r\n\r\nconst tempVec3_a = new Vec3();\r\n\r\nenum MoveAction {\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n}\r\n\r\nenum MoveState {\r\n    RUNNING,\r\n    MOVING_LEFT,\r\n    MOVING_RIGHT,\r\n    JUMPING,\r\n}\r\n\r\nconst cocosAnim = {\r\n    idle: 'cocos_anim_idle',\r\n    run: 'cocos_anim_run',\r\n    jump: 'cocos_anim_jump',\r\n}\r\n\r\n@ccclass('PlayerController')\r\nexport class PlayerController extends Component {\r\n\r\n    @property({type: CCFloat})\r\n    public speed: number = 1;\r\n\r\n    @property({type: SkeletalAnimationComponent})\r\n    public playerAnimComp: SkeletalAnimationComponent = null;\r\n    @property({type: AudioClip})\r\n    public coinAC: AudioClip = null;\r\n    @property({type: AudioClip})\r\n    public jumpAC: AudioClip = null;\r\n\r\n\r\n    public onTriggerCoin: (coinNode: Node) => void;\r\n    public onTriggerBlock: (roadBlockNode: Node) => void;\r\n\r\n    private _pressedX = 0;\r\n    private _pressedY = 0;\r\n\r\n    private _moveState: MoveState = MoveState.RUNNING;\r\n    private _gameState: GameState = GameState.INIT;\r\n\r\n    private _audioSourceComp: AudioSourceComponent = null;\r\n\r\n    start () {\r\n        // Your initialization goes here.\r\n        this._audioSourceComp = this.getComponent(AudioSourceComponent);\r\n    }\r\n\r\n    onGameStateChanged(state: GameState) {\r\n        switch(state) {\r\n            case GameState.INIT:\r\n                this.onGameInit();\r\n                break;\r\n            case GameState.PLAYING:\r\n                this.onGamePlaying();\r\n                break;\r\n            case GameState.END:\r\n                this.onGameEnd();\r\n                break;\r\n        }\r\n\r\n        this._gameState = state;\r\n    }\r\n\r\n    onGameInit() {\r\n        this.playerAnimComp.play(cocosAnim.idle);\r\n        this.node.setPosition(tempVec3_a.set(0, 0, 0));\r\n    }\r\n\r\n    onGamePlaying() {\r\n        this._moveState = MoveState.RUNNING;\r\n        this.playerAnimComp.play(cocosAnim.run);\r\n\r\n        const jumpState = this.playerAnimComp.getState(cocosAnim.jump);\r\n        jumpState.on(AnimationComponent.EventType.FINISHED, this.onJumpEnd, this);\r\n\r\n        systemEvent.on(SystemEvent.EventType.TOUCH_START, this.onViewTouchStart, this);\r\n        systemEvent.on(SystemEvent.EventType.TOUCH_END, this.onViewTouchEnd, this);\r\n    }\r\n\r\n    onGameEnd() {\r\n        const jumpState = this.playerAnimComp.getState(cocosAnim.jump);\r\n        jumpState.off(AnimationComponent.EventType.FINISHED, this.onJumpEnd, this);\r\n\r\n        systemEvent.off(SystemEvent.EventType.TOUCH_START, this.onViewTouchStart, this);\r\n        systemEvent.off(SystemEvent.EventType.TOUCH_END, this.onViewTouchEnd, this);\r\n    }\r\n\r\n    onTriggerEnter(event: ITriggerEvent) {\r\n        const triggerNode: Node = event.otherCollider.node;\r\n        if (triggerNode.name === 'Coin') {\r\n            this._audioSourceComp.playOneShot(this.coinAC);\r\n            if (this.onTriggerCoin) {\r\n                this.onTriggerCoin(triggerNode);\r\n            }\r\n        } else if (triggerNode.name === 'RoadBlock') {\r\n            const animComp = triggerNode.getComponent(AnimationComponent);\r\n            const downName = 'block_down';\r\n            const state = animComp.getState(downName);\r\n            if (!state.isPlaying) {\r\n                animComp.play(downName);\r\n            }\r\n            if (this.onTriggerBlock) {\r\n                this.onTriggerBlock(triggerNode);\r\n            }\r\n        }\r\n    }\r\n\r\n    onViewTouchStart(event: Touch) {\r\n        let location = event.getLocation();// 获取节点坐标\r\n        this._pressedX = location.x;\r\n        this._pressedY = location.y;\r\n    }\r\n\r\n    onViewTouchEnd(event: Touch) {\r\n        let touchPoint = event.getLocation();\r\n        let endX = this._pressedX - touchPoint.x;\r\n        let endY = this._pressedY - touchPoint.y;\r\n    \r\n        if (Math.abs(endX) > Math.abs(endY)){\r\n            //手势向左右\r\n            //判断向左还是向右 \r\n            if (endX  > 0){\r\n                // left\r\n                this.move(MoveAction.LEFT);\r\n            } else {\r\n                // right\r\n                this.move(MoveAction.RIGHT);\r\n            }\r\n        } else {\r\n            //手势向上下\r\n            //判断手势向上还是向下\r\n            if (endY  > 0){\r\n                // down\r\n            } else {\r\n                // up\r\n                this.move(MoveAction.UP);\r\n            }\r\n         }\r\n    }\r\n\r\n    move(moveAction: MoveAction) {\r\n        switch (moveAction) {\r\n            case MoveAction.LEFT:\r\n                if (this._moveState === MoveState.RUNNING) {\r\n                    tween(this.node)\r\n                        .by(0.5, {position: new Vec3(GameDefines.leftLineX, 0, 0)}, {onComplete: ()=> {\r\n                            this._moveState = MoveState.RUNNING;\r\n                        }})\r\n                        .start();\r\n                    this._moveState = MoveState.MOVING_LEFT;\r\n                }\r\n                break;\r\n            case MoveAction.RIGHT:\r\n                if (this._moveState === MoveState.RUNNING) {\r\n                    tween(this.node)\r\n                    .by(0.5, {position: new Vec3(GameDefines.rightLineX, 0, 0)}, {onComplete: ()=> {\r\n                        this._moveState = MoveState.RUNNING;\r\n                    }})\r\n                    .start();\r\n                    this._moveState = MoveState.MOVING_RIGHT;\r\n                }\r\n                break;\r\n            case MoveAction.UP:\r\n                if (this._moveState === MoveState.RUNNING) {\r\n                    this._audioSourceComp.playOneShot(this.jumpAC);\r\n                    this.playerAnimComp.crossFade(cocosAnim.jump);\r\n                    const state = this.playerAnimComp.getState(cocosAnim.jump);\r\n                    state.speed = 1.5;\r\n                    tween(this.node)\r\n                    .by(0.75, {position: new Vec3(0, 0, 10)}, {onComplete: ()=> {\r\n                        // this._moveState = MoveState.RUNNING;\r\n                    }})\r\n                    .start();\r\n                    this._moveState = MoveState.JUMPING;\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    \r\n    onJumpEnd(type, state) {\r\n        // const jumpState = this.playerAnimComp.getState(cocosAnim.jump);\r\n        // jumpState.off(AnimationComponent.EventType.LASTFRAME, this.onJumpEnd, this);\r\n        if (state?.name === cocosAnim.jump) {\r\n            this.playerAnimComp.play(cocosAnim.run);\r\n            this._moveState = MoveState.RUNNING;\r\n        }\r\n    }\r\n\r\n\r\n    update (deltaTime: number) {\r\n        if (this._gameState === GameState.PLAYING) {\r\n            if (this._moveState === MoveState.JUMPING) {\r\n                // this.node.translate(tempVec3_a.set(0, 0, this.speed * 1.5 * deltaTime));\r\n            } else {\r\n                this.node.translate(tempVec3_a.set(0, 0, this.speed * deltaTime));\r\n            }\r\n        }\r\n    }\r\n\r\n    onDestroy() {\r\n        systemEvent.off(SystemEvent.EventType.TOUCH_START, this.onViewTouchStart, this);\r\n        systemEvent.off(SystemEvent.EventType.TOUCH_END, this.onViewTouchEnd, this);\r\n    }\r\n}\r\n"]}