{"version":3,"sources":["file:///F:/Lap%20Trinh%20Game/simple-games/assets/simple-shooting/scripts/ShootingGameManager.ts"],"names":["_decorator","Component","Prefab","instantiate","Vec3","CCInteger","ccclass","property","ShootingGameManager","type","start","generateBoxes","bottomBoxNum","boxSize","i","j","boxNode","boxPrfb","posX","posY","parent","node","setWorldPosition"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;AAAmBC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,S,OAAAA,S;;;;;;;;;OAC3D;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;qCAGjBQ,mB,WADZF,OAAO,CAAC,qBAAD,C,UAEHC,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEP;AAAP,OAAD,C,UAERK,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEJ;AAAP,OAAD,C,2BAJb,MACaG,mBADb,SACyCP,SADzC,CACmD;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAM/CS,QAAAA,KAAK,GAAI;AACL;AACA,eAAKC,aAAL;AACH;;AAEDA,QAAAA,aAAa,GAAG;AACZ,cAAMC,YAAY,GAAG,KAAKA,YAA1B;AACA,cAAMC,OAAO,GAAG,CAAhB;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,YAApB,EAAkCE,CAAC,EAAnC,EAAuC;AACnC,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAIH,YAAY,GAAGE,CAApC,EAAwCC,CAAC,EAAzC,EAA6C;AACzC,kBAAMC,OAAY,GAAGb,WAAW,CAAC,KAAKc,OAAN,CAAhC;AACA,kBAAMC,IAAI,GAAGJ,CAAC,GAAGD,OAAJ,GAAc,CAAd,GAAkBE,CAA/B;AACA,kBAAMI,IAAI,GAAGL,CAAC,GAAG,GAAjB;AACAE,cAAAA,OAAO,CAACI,MAAR,GAAiB,KAAKC,IAAtB;AACAL,cAAAA,OAAO,CAACM,gBAAR,CAAyB,IAAIlB,IAAJ,CAASc,IAAT,EAAeC,IAAf,EAAqB,CAAC,EAAtB,CAAzB;AACH;AACJ;AACJ,SAvB8C,CAyB/C;AACA;AACA;;;AA3B+C,O;;;;;iBAEtB,I;;;;;;;iBAEK,C","sourcesContent":["import { _decorator, Component, Prefab, instantiate, Node, Vec3, CCInteger} from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('ShootingGameManager')\r\nexport class ShootingGameManager extends Component {\r\n    @property({type: Prefab})\r\n    public boxPrfb: Prefab = null;\r\n    @property({type: CCInteger})\r\n    public bottomBoxNum: number = 5;\r\n\r\n    start () {\r\n        // Your initialization goes here.\r\n        this.generateBoxes();\r\n    }\r\n\r\n    generateBoxes() {\r\n        const bottomBoxNum = this.bottomBoxNum;\r\n        const boxSize = 1;\r\n        for (let i = 0; i < bottomBoxNum; i++) {   \r\n            for (let j = 0; j < (bottomBoxNum - i); j++) {\r\n                const boxNode:Node = instantiate(this.boxPrfb);\r\n                const posX = i * boxSize / 2 + j;\r\n                const posY = i + 0.1;\r\n                boxNode.parent = this.node;\r\n                boxNode.setWorldPosition(new Vec3(posX, posY, -10));\r\n            }\r\n        }\r\n    }\r\n\r\n    // update (deltaTime: number) {\r\n    //     // Your update function goes here.\r\n    // }\r\n}\r\n"]}