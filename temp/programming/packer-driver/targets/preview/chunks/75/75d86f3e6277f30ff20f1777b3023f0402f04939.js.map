{"version":3,"sources":["file:///F:/Lap%20Trinh%20Game/simple-games/assets/simple-shooting/scripts/Grenade.ts"],"names":["_decorator","Component","Vec3","ColliderComponent","RigidBodyComponent","director","Prefab","instantiate","Utils","ccclass","property","Grenade","type","_collider","_rigidBody","_flyTime","_autoDestoryTime","_explosionForce","_explosionRadius","onLoad","node","getComponent","on","onCollisionEnter","init","force","applyImpulse","event","explosion","destroy","scene","getScene","explosionPrfb","addChild","setWorldPosition","getWorldPosition","children","forEach","walkNode","rigid","dir","subtract","dist","length","normalize","multiplyScalar","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Vec3, ColliderComponent, RigidBodyComponent, PhysicsSystem, director, Scene, Prefab, instantiate } from 'cc';\r\nimport { Utils } from './Utils';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Grenade')\r\nexport class Grenade extends Component {\r\n    @property({type: Prefab})\r\n    public explosionPrfb: Prefab = null;\r\n    \r\n    private _collider: ColliderComponent = null;\r\n    private _rigidBody: RigidBodyComponent = null;\r\n    private _flyTime: number = 0;\r\n    private _autoDestoryTime: number = 3;\r\n    private _explosionForce = 100;\r\n    private _explosionRadius = 10;\r\n\r\n    onLoad () {\r\n        // Your initialization goes here.\r\n        this._collider = this.node.getComponent(ColliderComponent);\r\n        this._rigidBody = this.node.getComponent(RigidBodyComponent);\r\n\r\n        this._collider.on('onCollisionEnter', this.onCollisionEnter, this)\r\n    }\r\n\r\n    init(force: Vec3) {\r\n        this._rigidBody.applyImpulse(force, new Vec3(0, -1, 0));\r\n    }\r\n\r\n    onCollisionEnter(event) {\r\n        this.explosion();\r\n    }\r\n\r\n    explosion() {\r\n        this.node.destroy();\r\n        const scene: Scene = director.getScene();\r\n        const explosion: any = instantiate(this.explosionPrfb);\r\n        scene.addChild(explosion);\r\n        explosion.setWorldPosition(this.node.getWorldPosition());\r\n\r\n        const children: any[] = scene.children;\r\n        children.forEach((node:Node) => {\r\n            Utils.walkNode(node, (node: Node) => {\r\n                const rigid = node.getComponent(RigidBodyComponent);\r\n                if (rigid) {\r\n                    const dir = new Vec3();\r\n                    Vec3.subtract(dir, node.getWorldPosition(), this.node.getWorldPosition());\r\n                    const dist: number = dir.length();\r\n                    if (dist < this._explosionRadius) {\r\n                        dir.normalize();\r\n                        Vec3.multiplyScalar(dir, dir, this._explosionForce / dist);\r\n                        rigid.applyImpulse(dir);\r\n                    }\r\n                }\r\n            });\r\n        })\r\n    }\r\n\r\n    update (deltaTime: number) {\r\n        // Your update function goes here.\r\n        this._flyTime += deltaTime;\r\n        if (this._flyTime >= this._autoDestoryTime) {\r\n            this.explosion();\r\n        }\r\n    }\r\n}\r\n"]}