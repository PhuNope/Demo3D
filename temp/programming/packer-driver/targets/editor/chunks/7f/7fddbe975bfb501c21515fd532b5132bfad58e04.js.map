{"version":3,"sources":["file:///F:/Lap%20Trinh%20Game/simple-games/assets/simple-shooting/scripts/InputControl.ts"],"names":["_decorator","Component","Node","ShootingPlayerController","ActionType","ccclass","property","InputControl","type","onLoad","actionButtons","forEach","button","on","EventType","TOUCH_START","onTouchStart","TOUCH_END","onTouchEnd","event","node","currentTarget","name","playerCtrl","doAction","Forward","Backward","Left","Right","Shoot","ThrowGrenade"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;;AACvBC,MAAAA,wB,iBAAAA,wB;;AACAC,MAAAA,U,iBAAAA,U;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;8BAGjBO,Y,WADZF,OAAO,CAAC,cAAD,C,UAEHC,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAE,CAACN,IAAD;AAAP,OAAD,C,UAERI,QAAQ,CAAC;AAACE,QAAAA,IAAI;AAAA;AAAA;AAAL,OAAD,C,2BAJb,MACaD,YADb,SACkCN,SADlC,CAC4C;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAMxCQ,QAAAA,MAAM,GAAG;AAEL,eAAKC,aAAL,CAAmBC,OAAnB,CAA4BC,MAAD,IAAY;AACnCA,YAAAA,MAAM,CAACC,EAAP,CAAUX,IAAI,CAACY,SAAL,CAAeC,WAAzB,EAAsC,KAAKC,YAA3C,EAAyD,IAAzD;AACAJ,YAAAA,MAAM,CAACC,EAAP,CAAUX,IAAI,CAACY,SAAL,CAAeG,SAAzB,EAAoC,KAAKC,UAAzC,EAAqD,IAArD;AACH,WAHD;AAIH;;AAEDF,QAAAA,YAAY,CAACG,KAAD,EAAoB;AAC5B,gBAAMC,IAAI,GAAGD,KAAK,CAACE,aAAnB;;AACA,cAAID,IAAJ,EAAU;AACN,oBAAOA,IAAI,CAACE,IAAZ;AACI,mBAAK,SAAL;AACI,qBAAKC,UAAL,CAAgBC,QAAhB,CAAyB;AAAA;AAAA,8CAAWC,OAApC,EAA6C,IAA7C;AACA;;AACJ,mBAAK,UAAL;AACI,qBAAKF,UAAL,CAAgBC,QAAhB,CAAyB;AAAA;AAAA,8CAAWE,QAApC,EAA8C,IAA9C;AACA;;AACJ,mBAAK,MAAL;AACI,qBAAKH,UAAL,CAAgBC,QAAhB,CAAyB;AAAA;AAAA,8CAAWG,IAApC,EAA0C,IAA1C;AACA;;AACJ,mBAAK,OAAL;AACI,qBAAKJ,UAAL,CAAgBC,QAAhB,CAAyB;AAAA;AAAA,8CAAWI,KAApC,EAA2C,IAA3C;AACA;;AACJ,mBAAK,OAAL;AACI,qBAAKL,UAAL,CAAgBC,QAAhB,CAAyB;AAAA;AAAA,8CAAWK,KAApC,EAA2C,IAA3C;AACA;;AACJ,mBAAK,cAAL;AACI,qBAAKN,UAAL,CAAgBC,QAAhB,CAAyB;AAAA;AAAA,8CAAWM,YAApC,EAAkD,IAAlD;AACA;AAlBR;AAoBH;AACJ;;AAEDZ,QAAAA,UAAU,CAACC,KAAD,EAAQ;AACd,gBAAMC,IAAI,GAAGD,KAAK,CAACE,aAAnB;;AACA,cAAID,IAAJ,EAAU;AACN,oBAAOA,IAAI,CAACE,IAAZ;AACI,mBAAK,SAAL;AACI,qBAAKC,UAAL,CAAgBC,QAAhB,CAAyB;AAAA;AAAA,8CAAWC,OAApC,EAA6C,KAA7C;AACA;;AACJ,mBAAK,UAAL;AACI,qBAAKF,UAAL,CAAgBC,QAAhB,CAAyB;AAAA;AAAA,8CAAWE,QAApC,EAA8C,KAA9C;AACA;;AACJ,mBAAK,MAAL;AACI,qBAAKH,UAAL,CAAgBC,QAAhB,CAAyB;AAAA;AAAA,8CAAWG,IAApC,EAA0C,KAA1C;AACA;;AACJ,mBAAK,OAAL;AACI,qBAAKJ,UAAL,CAAgBC,QAAhB,CAAyB;AAAA;AAAA,8CAAWI,KAApC,EAA2C,KAA3C;AACA;AAZR;AAcH;AACJ;;AA1DuC,O;;;;;iBAET,E;;;;;;;iBAEe,I","sourcesContent":["import { _decorator, Component, Node, Vec3, ColliderComponent, RigidBodyComponent, EventTouch } from 'cc';\r\nimport { ShootingPlayerController } from './ShootingPlayerController';\r\nimport { ActionType } from './GameDefines';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('InputControl')\r\nexport class InputControl extends Component {\r\n    @property({type: [Node]})\r\n    public actionButtons: Node[] = [];\r\n    @property({type: ShootingPlayerController})\r\n    public playerCtrl: ShootingPlayerController = null;\r\n\r\n    onLoad() {\r\n\r\n        this.actionButtons.forEach((button) => {\r\n            button.on(Node.EventType.TOUCH_START, this.onTouchStart, this);\r\n            button.on(Node.EventType.TOUCH_END, this.onTouchEnd, this);\r\n        })\r\n    }\r\n\r\n    onTouchStart(event: EventTouch) {\r\n        const node = event.currentTarget as Node;\r\n        if (node) {\r\n            switch(node.name) {\r\n                case 'Forward':  \r\n                    this.playerCtrl.doAction(ActionType.Forward, true);\r\n                    break;\r\n                case 'Backward':  \r\n                    this.playerCtrl.doAction(ActionType.Backward, true);\r\n                    break;\r\n                case 'Left':  \r\n                    this.playerCtrl.doAction(ActionType.Left, true);\r\n                    break;\r\n                case 'Right':  \r\n                    this.playerCtrl.doAction(ActionType.Right, true);\r\n                    break;\r\n                case 'Shoot':  \r\n                    this.playerCtrl.doAction(ActionType.Shoot, true);\r\n                    break;\r\n                case 'ThrowGrenade':\r\n                    this.playerCtrl.doAction(ActionType.ThrowGrenade, true);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    onTouchEnd(event) {\r\n        const node = event.currentTarget as Node;\r\n        if (node) {\r\n            switch(node.name) {\r\n                case 'Forward':  \r\n                    this.playerCtrl.doAction(ActionType.Forward, false);\r\n                    break;\r\n                case 'Backward':  \r\n                    this.playerCtrl.doAction(ActionType.Backward, false);\r\n                    break;\r\n                case 'Left':  \r\n                    this.playerCtrl.doAction(ActionType.Left, false);\r\n                    break;\r\n                case 'Right':  \r\n                    this.playerCtrl.doAction(ActionType.Right, false);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}"]}